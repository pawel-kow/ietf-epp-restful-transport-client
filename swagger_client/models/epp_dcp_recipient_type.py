# coding: utf-8

"""
    RESTful EPP

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EppDcpRecipientType(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'other': 'bool',
        'ours': 'list[EppDcpOursType]',
        'public': 'bool',
        'same': 'bool',
        'unrelated': 'bool'
    }

    attribute_map = {
        'other': 'other',
        'ours': 'ours',
        'public': 'public',
        'same': 'same',
        'unrelated': 'unrelated'
    }

    def __init__(self, other=False, ours=None, public=False, same=False, unrelated=False):  # noqa: E501
        """EppDcpRecipientType - a model defined in Swagger"""  # noqa: E501
        self._other = None
        self._ours = None
        self._public = None
        self._same = None
        self._unrelated = None
        self.discriminator = None
        if other is not None:
            self.other = other
        if ours is not None:
            self.ours = ours
        if public is not None:
            self.public = public
        if same is not None:
            self.same = same
        if unrelated is not None:
            self.unrelated = unrelated

    @property
    def other(self):
        """Gets the other of this EppDcpRecipientType.  # noqa: E501


        :return: The other of this EppDcpRecipientType.  # noqa: E501
        :rtype: bool
        """
        return self._other

    @other.setter
    def other(self, other):
        """Sets the other of this EppDcpRecipientType.


        :param other: The other of this EppDcpRecipientType.  # noqa: E501
        :type: bool
        """

        self._other = other

    @property
    def ours(self):
        """Gets the ours of this EppDcpRecipientType.  # noqa: E501


        :return: The ours of this EppDcpRecipientType.  # noqa: E501
        :rtype: list[EppDcpOursType]
        """
        return self._ours

    @ours.setter
    def ours(self, ours):
        """Sets the ours of this EppDcpRecipientType.


        :param ours: The ours of this EppDcpRecipientType.  # noqa: E501
        :type: list[EppDcpOursType]
        """

        self._ours = ours

    @property
    def public(self):
        """Gets the public of this EppDcpRecipientType.  # noqa: E501


        :return: The public of this EppDcpRecipientType.  # noqa: E501
        :rtype: bool
        """
        return self._public

    @public.setter
    def public(self, public):
        """Sets the public of this EppDcpRecipientType.


        :param public: The public of this EppDcpRecipientType.  # noqa: E501
        :type: bool
        """

        self._public = public

    @property
    def same(self):
        """Gets the same of this EppDcpRecipientType.  # noqa: E501


        :return: The same of this EppDcpRecipientType.  # noqa: E501
        :rtype: bool
        """
        return self._same

    @same.setter
    def same(self, same):
        """Sets the same of this EppDcpRecipientType.


        :param same: The same of this EppDcpRecipientType.  # noqa: E501
        :type: bool
        """

        self._same = same

    @property
    def unrelated(self):
        """Gets the unrelated of this EppDcpRecipientType.  # noqa: E501


        :return: The unrelated of this EppDcpRecipientType.  # noqa: E501
        :rtype: bool
        """
        return self._unrelated

    @unrelated.setter
    def unrelated(self, unrelated):
        """Sets the unrelated of this EppDcpRecipientType.


        :param unrelated: The unrelated of this EppDcpRecipientType.  # noqa: E501
        :type: bool
        """

        self._unrelated = unrelated

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EppDcpRecipientType, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EppDcpRecipientType):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
